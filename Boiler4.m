function [sys,x0,str,tss]=cstr1(t,x,u,flag,Param2,X_ss)

global dpdt2 dardt2 Param2 X0 Vsd02 qsf2 ph
Vsd0=Vsd02;

%
% Boiler1.M is an s-function to model the water side of a boiler drum. The
% model equations are from the paper by K.J. Astrom and R.D. Bell
% (Automatica-36 (2000) 363-378).
%===============================================================================

%	alfvbar(abr) average volume fraction of steam in risers                  function of alpha r and p       auxiliary variable      1
%	hc           condensation enthalpy (hs-hw)                               function of p                   auxiliary variable      2
%	qct          condensation flowrate	                                     function of p,Vwt and qf        auxiliary variable      3
%	Adc          downcomer area                                              design Param2eter                constant                4
%	Vdc          downcomer volume                                            design Param2eter                constant                5
%	Ad           drum area at normal operation                               operation Param2eter             constant                6
%	l            drum level                                                  function of alpha r,p and Vwt   output variable         7
%	p            drum pressure                                               p                               state variable          8
%   Vd           drum volume                                                 design Param2eter                constant                9
%	beta         empirical Param2eter                                         design Param2eter                constant                10
%	qf           feedwater mass flowrate                                     qf                              input variable          11
%	qr           flow out of risers                                          function of alpha r and p       auxiliary variable      12
%	k            friction coefficient                                        design Param2eter                constant                13
%	g            gravitational acceleration                                  universal constant              constant                14
%	Q            heat input to risers                                        Q                               input variable          15
%	Td           residance time of steam in the drum                         operating Param2eter             constant                16
%	ros          specific density of steam                                   function of p                   auxiliary variable      17
%	row          specific density of water                                   function of p                   auxiliary variable      18
%	hf           specific enthalpy of feedwater                              function of p                   auxiliary variable      19
%	hs           specific enthalpy of steam                                  function of p                   auxiliary variable      20
%	hw           specific enthalpy of water                                  function of p                   auxiliary variable      21
%	cp           specific heat of metal                                      design Param2eter                constant                22
%	qsd          steam flowrate through the liquid surface in the drum       function of alpha r,p and Vsd   auxiliary variable      23
%	qs           steam mass flowrate                                         function of p                   output variable         24
%	alpha r(ar)  steam quality at riser outlet                               alpha r                         state variable          25
%	ts           temperature of steam                                        function of p                   auxiliary variable      26
%	qdc          total mass flowrate into the risers                         function of alpha r and p       auxiliary variable      27
%	mt           total mass of metal                                         design Param2eter                constant                28
%	mr           total mass of riser metals                                  design Param2eter                constant                29
%	Vt           total volume (Vst+Vwt)                                      design Param2eter                constant                30
%	Vst          total volume of steam                                       function of Vwt                 auxiliary variable      31
%	Vwt          total volume of water                                       Vwt                             state variable          32
%	Vr           volume of riser tubes                                       design Param2eter                constant                33
%	Vsd          volume of steam in the drum                                 Vsd                             state variable          34
%	Vsd0         volume of steam in the drum (no condensation)               operating Param2eter             constant                35
%	Vwd          volume of water in the drum
%	function of alpha r and Vwt     auxiliary variable      36




switch flag,

case 0,	% Initialize the states and sizes
   [sys,x0,str,tss] = mdlInitialSizes(t,x,u,X_ss);
   
        % ****************
  	%  Outputs
  	% ****************   
     
case 3,   % Calculate the outputs
   
   sys = mdlOutputs(t,x,u,Param2);
   
   % ****************
   % Update
   % ****************
case 1,	% Obtain derivatives of states
   
   sys = mdlDerivatives(t,x,u,Param2);

otherwise,
   sys = [];
end

% ******************************************
% Sub-routines or Functions
% ******************************************

% ******************************************
% Initialization
% ******************************************
function [sys,x0,str,tss] = mdlInitialSizes(t,x,u,X_ss);

global dpdt2 dardt2 Param2 X0 Vsd02 qsf2 ph
Vsd0=Vsd02;
% This handles initialization of the function.
% Call simsize of a sizes structure.
sizes = simsizes;
sizes.NumContStates  = 4;     % continuous states
sizes.NumDiscStates  = 0;     % discrete states
sizes.NumOutputs     = 11;    % outputs
sizes.NumInputs      = 3;     % inputs 
sizes.DirFeedthrough = 1;     % System is non-causal
sizes.NumSampleTimes = 1;     %
sys = simsizes(sizes);        %
x0  = X_ss;                   % Initialize the continuous states.
str = [];                     % set str to an empty matrix.
tss = [0,0];	              % sample time: [period, offset].















% ******************************************************************************************************************************
%  Outputs
% ******************************************************************************************************************************


function sys = mdlOutputs(t,x,u,Param2);

global dpdt2 dardt2 Param2 X0 Vsd02 qsf2 ph
Vsd0=Vsd02;

% External Parameters:

Adc     = Param2(1);
Vd      = Param2(2);
Vdc     = Param2(3);
Ad      = Param2(4);
beta    = Param2(5);
k       = Param2(6);
g       = Param2(7);
Td      = Param2(8);
cp      = Param2(9);
mt      = Param2(10);
mr      = Param2(11);
Vr      = Param2(12);
md      = Param2(13);



% States

Vwt = x(1);
p   = x(2);
ar  = x(3);
Vsd = x(4);


% Inputs with high limit constraints

qf = min([u(1) 75.74]);
Q  = min([u(2) 1.06e+008]);
hf = u(3);



% superheater model: steam flow

qs = 1.095669874814614e+002*1e-3*15/40*sqrt(max([(p - ph*1e6) 0]));


% Steam and Water properties as functions of pressure (original)

ts = 4.1200e-020*p^3 -  1.4112e-012*p^2 + 2.3375e-005*p + 450.3765;
hs = (3.8341e-020*p^3 - 1.8082e-012*p^2 + 6.6738e-006*p + 2.8013e+003)*1e3;
hw = (1.8212e-019*p^3 - 5.9127e-012*p^2 + 1.0752e-004*p + 7.4207e+002)*1e3;
ros = 6.5724e-021*p^3   -3.656e-016*p^2   + 4.8748e-006*p  + 0.16333;
row = -4.6055e-020*p^3 +1.3506e-012*p^2 -2.9995e-005*p + 8.9930e+002;




% Steam and Water properties as functions of pressure (derivatives)

dtsdp = 1.236e-019*p^2 - 2.8224e-012*p + 2.3375e-005;
dhsdp = (1.1502e-019*p^2 -3.6164e-012*p + 6.6738e-006)*1e3;
dhwdp = (5.4636e-019*p^2 -1.1825e-011*p  + 0.00010752)*1e3;
drosdp = 1.9717e-020*p^2 -7.312e-016*p + 4.8748e-006;
drowdp = -1.3817e-019*p^2+2.7012e-012*p -2.9995e-005;


% update derivatives

dardt=dardt2;
dpdt=dpdt2;


% Auxiliary Variables

Vt      = Vd + Vr + Vdc;
Vst     = Vt - Vwt;
hc      = hs - hw;
eta     = ar*(row-ros)/ros;
dabrdp  = (-1434787390918929/10384593717069655257060992658440192*p^2+3343923634117669/1237940039285380274899124224*p-276655044245459/9223372036854775808)/(-69953813425371085/1329227995784915872903807060280344576*p^3+27400837659643039499/20282409603651670423947251286016*p^2-41166993696091989/1180591620717411303424*p+89913667/100000)*(1-(8736218079496781/1329227995784915872903807060280344576*p^3-7415248951095051/20282409603651670423947251286016*p^2+5755148032673237/1180591620717411303424*p+16333/100000)/(-69953813425371085/1329227995784915872903807060280344576*p^3+27400837659643039499/20282409603651670423947251286016*p^2-41166993696091989/1180591620717411303424*p+89913667/100000)/ar*log(1+(-69953813425371085/1329227995784915872903807060280344576*p^3+27400837659643039499/20282409603651670423947251286016*p^2-41166993696091989/1180591620717411303424*p+89913667/100000)/(8736218079496781/1329227995784915872903807060280344576*p^3-7415248951095051/20282409603651670423947251286016*p^2+5755148032673237/1180591620717411303424*p+16333/100000)*ar))-(-478262463639643/10384593717069655257060992658440192*p^3+3343923634117669/2475880078570760549798248448*p^2-276655044245459/9223372036854775808*p+8993/10)/(-69953813425371085/1329227995784915872903807060280344576*p^3+27400837659643039499/20282409603651670423947251286016*p^2-41166993696091989/1180591620717411303424*p+89913667/100000)^2*(1-(8736218079496781/1329227995784915872903807060280344576*p^3-7415248951095051/20282409603651670423947251286016*p^2+5755148032673237/1180591620717411303424*p+16333/100000)/(-69953813425371085/1329227995784915872903807060280344576*p^3+27400837659643039499/20282409603651670423947251286016*p^2-41166993696091989/1180591620717411303424*p+89913667/100000)/ar*log(1+(-69953813425371085/1329227995784915872903807060280344576*p^3+27400837659643039499/20282409603651670423947251286016*p^2-41166993696091989/1180591620717411303424*p+89913667/100000)/(8736218079496781/1329227995784915872903807060280344576*p^3-7415248951095051/20282409603651670423947251286016*p^2+5755148032673237/1180591620717411303424*p+16333/100000)*ar))*(-209861440276113255/1329227995784915872903807060280344576*p^2+27400837659643039499/10141204801825835211973625643008*p-41166993696091989/1180591620717411303424)+(-478262463639643/10384593717069655257060992658440192*p^3+3343923634117669/2475880078570760549798248448*p^2-276655044245459/9223372036854775808*p+8993/10)/(-69953813425371085/1329227995784915872903807060280344576*p^3+27400837659643039499/20282409603651670423947251286016*p^2-41166993696091989/1180591620717411303424*p+89913667/100000)*(-(26208654238490343/1329227995784915872903807060280344576*p^2-7415248951095051/10141204801825835211973625643008*p+5755148032673237/1180591620717411303424)/(-69953813425371085/1329227995784915872903807060280344576*p^3+27400837659643039499/20282409603651670423947251286016*p^2-41166993696091989/1180591620717411303424*p+89913667/100000)/ar*log(1+(-69953813425371085/1329227995784915872903807060280344576*p^3+27400837659643039499/20282409603651670423947251286016*p^2-41166993696091989/1180591620717411303424*p+89913667/100000)/(8736218079496781/1329227995784915872903807060280344576*p^3-7415248951095051/20282409603651670423947251286016*p^2+5755148032673237/1180591620717411303424*p+16333/100000)*ar)+(8736218079496781/1329227995784915872903807060280344576*p^3-7415248951095051/20282409603651670423947251286016*p^2+5755148032673237/1180591620717411303424*p+16333/100000)/(-69953813425371085/1329227995784915872903807060280344576*p^3+27400837659643039499/20282409603651670423947251286016*p^2-41166993696091989/1180591620717411303424*p+89913667/100000)^2/ar*log(1+(-69953813425371085/1329227995784915872903807060280344576*p^3+27400837659643039499/20282409603651670423947251286016*p^2-41166993696091989/1180591620717411303424*p+89913667/100000)/(8736218079496781/1329227995784915872903807060280344576*p^3-7415248951095051/20282409603651670423947251286016*p^2+5755148032673237/1180591620717411303424*p+16333/100000)*ar)*(-209861440276113255/1329227995784915872903807060280344576*p^2+27400837659643039499/10141204801825835211973625643008*p-41166993696091989/1180591620717411303424)-(8736218079496781/1329227995784915872903807060280344576*p^3-7415248951095051/20282409603651670423947251286016*p^2+5755148032673237/1180591620717411303424*p+16333/100000)/(-69953813425371085/1329227995784915872903807060280344576*p^3+27400837659643039499/20282409603651670423947251286016*p^2-41166993696091989/1180591620717411303424*p+89913667/100000)/ar*((-209861440276113255/1329227995784915872903807060280344576*p^2+27400837659643039499/10141204801825835211973625643008*p-41166993696091989/1180591620717411303424)/(8736218079496781/1329227995784915872903807060280344576*p^3-7415248951095051/20282409603651670423947251286016*p^2+5755148032673237/1180591620717411303424*p+16333/100000)*ar-(-69953813425371085/1329227995784915872903807060280344576*p^3+27400837659643039499/20282409603651670423947251286016*p^2-41166993696091989/1180591620717411303424*p+89913667/100000)/(8736218079496781/1329227995784915872903807060280344576*p^3-7415248951095051/20282409603651670423947251286016*p^2+5755148032673237/1180591620717411303424*p+16333/100000)^2*ar*(26208654238490343/1329227995784915872903807060280344576*p^2-7415248951095051/10141204801825835211973625643008*p+5755148032673237/1180591620717411303424))/(1+(-69953813425371085/1329227995784915872903807060280344576*p^3+27400837659643039499/20282409603651670423947251286016*p^2-41166993696091989/1180591620717411303424*p+89913667/100000)/(8736218079496781/1329227995784915872903807060280344576*p^3-7415248951095051/20282409603651670423947251286016*p^2+5755148032673237/1180591620717411303424*p+16333/100000)*ar));
dabrdar = row/(row-ros)*(ros/(row-ros)/ar^2*log(1+ar/ros*(row-ros))-1/ar/(1+ar/ros*(row-ros)));
abr     = row/(row-ros)*(1-ros/(row-ros)/ar*log(1+ar/ros*(row-ros)));
Vwd     = Vwt - Vdc - (1-abr)*Vr;
l       = (Vwd+Vsd)/Ad;
qdc     = (2*row*Adc*(row-ros)*g*abr*Vr/k)^(1/2);
qct     = qf*(hw-hf)/hc + dpdt/hc*(ros*Vst*dhsdp+row*Vwt*dhwdp-Vt+mt*cp*dtsdp);

qr      = qdc -(Vr*(abr*drosdp+(1-abr)*drowdp+(ros-row)*dabrdp)*dpdt)+(row-ros)*Vr*dabrdar*dardt;

qcd     = (hw-hf)/hc*qf+1/hc*(ros*Vsd*dhsdp*dpdt+row*Vwd*dhwdp*dpdt-(Vsd+Vwd)*dpdt+md*cp*dtsdp*dpdt);
qsd     = ros/Td*(Vsd-Vsd0)+ar*qdc+ar*beta*(qdc-qr);

RHS = [qf-qs;Q+qf*hf-qs*hs;Q-ar*hc*qdc;ros/Td*(Vsd0-Vsd)+(hf-hw)*qf/hc];

% outputs:

%states

sys(1) = Vwt;
sys(2) = p;
sys(3) = ar;
sys(4) = Vsd;

%auxiliay variables

sys(5) = l;
sys(6) = Vst;     
sys(7) = Vwd;  
sys(8) = qdc;    
sys(9) = qct;
sys(10)= qr; 
sys(11)= qs;


% ******************************************************************************************************************************
% Derivatives
% ******************************************************************************************************************************

function sys = mdlDerivatives(t,x,u,Param2)

global dpdt2 dardt2 Param2 X0 Vsd02 qsf2 ph
Vsd0=Vsd02;
Adc     = Param2(1); % yok
Vd      = Param2(2);
Vdc     = Param2(3);
Ad      = Param2(4);
beta    = Param2(5);
k       = Param2(6);
g       = Param2(7);
Td      = Param2(8);
cp      = Param2(9);
mt      = Param2(10);
mr      = Param2(11);
Vr      = Param2(12);
md      = Param2(13);



% States

Vwt = x(1);
p   = x(2);
ar  = x(3);
Vsd = x(4);



% Inputs with high limit constraints

qf = min([u(1) 75.74]);
Q  = min([u(2) 1.06e+008]);
hf = u(3);


% superheater model: steam flow


qs = 1.095669874814614e+002*1e-3*15/40*sqrt(max([(p - ph*1e6) 0]));



% Steam and Water properties as functions of pressure (original)

ts = 4.1200e-020*p^3 -  1.4112e-012*p^2 + 2.3375e-005*p + 450.3765;
hs = (3.8341e-020*p^3 - 1.8082e-012*p^2 + 6.6738e-006*p + 2.8013e+003)*1e3;
hw = (1.8212e-019*p^3 - 5.9127e-012*p^2 + 1.0752e-004*p + 7.4207e+002)*1e3;
ros = 6.5724e-021*p^3   -3.656e-016*p^2   + 4.8748e-006*p  + 0.16333;
row = -4.6055e-020*p^3 +1.3506e-012*p^2 -2.9995e-005*p + 8.9930e+002;
%hf = 1.030378258109675e+006;%(1.37048817530061e-008*tf^4  -1.38959657828879e-006*tf^3 +  0.000168462991431346*tf^2 +   4.17205045324482*tf  -0.297131744409912)*1e3;


% Steam and Water properties as functions of pressure (derivatives)

dtsdp = 1.236e-019*p^2 - 2.8224e-012*p + 2.3375e-005;
dhsdp = (1.1502e-019*p^2 -3.6164e-012*p + 6.6738e-006)*1e3;
dhwdp = (5.4636e-019*p^2 -1.1825e-011*p  + 0.00010752)*1e3;
drosdp = 1.9717e-020*p^2 -7.312e-016*p + 4.8748e-006;
drowdp = -1.3817e-019*p^2+2.7012e-012*p -2.9995e-005;


dardt=dardt2;
dpdt=dpdt2;

% Auxiliary Variables

Vt      = Vd + Vr + Vdc;
Vst     = Vt - Vwt;
hc      = hs - hw;
eta     = ar*(row-ros)/ros;
dabrdp  = (-1434787390918929/10384593717069655257060992658440192*p^2+3343923634117669/1237940039285380274899124224*p-276655044245459/9223372036854775808)/(-69953813425371085/1329227995784915872903807060280344576*p^3+27400837659643039499/20282409603651670423947251286016*p^2-41166993696091989/1180591620717411303424*p+89913667/100000)*(1-(8736218079496781/1329227995784915872903807060280344576*p^3-7415248951095051/20282409603651670423947251286016*p^2+5755148032673237/1180591620717411303424*p+16333/100000)/(-69953813425371085/1329227995784915872903807060280344576*p^3+27400837659643039499/20282409603651670423947251286016*p^2-41166993696091989/1180591620717411303424*p+89913667/100000)/ar*log(1+(-69953813425371085/1329227995784915872903807060280344576*p^3+27400837659643039499/20282409603651670423947251286016*p^2-41166993696091989/1180591620717411303424*p+89913667/100000)/(8736218079496781/1329227995784915872903807060280344576*p^3-7415248951095051/20282409603651670423947251286016*p^2+5755148032673237/1180591620717411303424*p+16333/100000)*ar))-(-478262463639643/10384593717069655257060992658440192*p^3+3343923634117669/2475880078570760549798248448*p^2-276655044245459/9223372036854775808*p+8993/10)/(-69953813425371085/1329227995784915872903807060280344576*p^3+27400837659643039499/20282409603651670423947251286016*p^2-41166993696091989/1180591620717411303424*p+89913667/100000)^2*(1-(8736218079496781/1329227995784915872903807060280344576*p^3-7415248951095051/20282409603651670423947251286016*p^2+5755148032673237/1180591620717411303424*p+16333/100000)/(-69953813425371085/1329227995784915872903807060280344576*p^3+27400837659643039499/20282409603651670423947251286016*p^2-41166993696091989/1180591620717411303424*p+89913667/100000)/ar*log(1+(-69953813425371085/1329227995784915872903807060280344576*p^3+27400837659643039499/20282409603651670423947251286016*p^2-41166993696091989/1180591620717411303424*p+89913667/100000)/(8736218079496781/1329227995784915872903807060280344576*p^3-7415248951095051/20282409603651670423947251286016*p^2+5755148032673237/1180591620717411303424*p+16333/100000)*ar))*(-209861440276113255/1329227995784915872903807060280344576*p^2+27400837659643039499/10141204801825835211973625643008*p-41166993696091989/1180591620717411303424)+(-478262463639643/10384593717069655257060992658440192*p^3+3343923634117669/2475880078570760549798248448*p^2-276655044245459/9223372036854775808*p+8993/10)/(-69953813425371085/1329227995784915872903807060280344576*p^3+27400837659643039499/20282409603651670423947251286016*p^2-41166993696091989/1180591620717411303424*p+89913667/100000)*(-(26208654238490343/1329227995784915872903807060280344576*p^2-7415248951095051/10141204801825835211973625643008*p+5755148032673237/1180591620717411303424)/(-69953813425371085/1329227995784915872903807060280344576*p^3+27400837659643039499/20282409603651670423947251286016*p^2-41166993696091989/1180591620717411303424*p+89913667/100000)/ar*log(1+(-69953813425371085/1329227995784915872903807060280344576*p^3+27400837659643039499/20282409603651670423947251286016*p^2-41166993696091989/1180591620717411303424*p+89913667/100000)/(8736218079496781/1329227995784915872903807060280344576*p^3-7415248951095051/20282409603651670423947251286016*p^2+5755148032673237/1180591620717411303424*p+16333/100000)*ar)+(8736218079496781/1329227995784915872903807060280344576*p^3-7415248951095051/20282409603651670423947251286016*p^2+5755148032673237/1180591620717411303424*p+16333/100000)/(-69953813425371085/1329227995784915872903807060280344576*p^3+27400837659643039499/20282409603651670423947251286016*p^2-41166993696091989/1180591620717411303424*p+89913667/100000)^2/ar*log(1+(-69953813425371085/1329227995784915872903807060280344576*p^3+27400837659643039499/20282409603651670423947251286016*p^2-41166993696091989/1180591620717411303424*p+89913667/100000)/(8736218079496781/1329227995784915872903807060280344576*p^3-7415248951095051/20282409603651670423947251286016*p^2+5755148032673237/1180591620717411303424*p+16333/100000)*ar)*(-209861440276113255/1329227995784915872903807060280344576*p^2+27400837659643039499/10141204801825835211973625643008*p-41166993696091989/1180591620717411303424)-(8736218079496781/1329227995784915872903807060280344576*p^3-7415248951095051/20282409603651670423947251286016*p^2+5755148032673237/1180591620717411303424*p+16333/100000)/(-69953813425371085/1329227995784915872903807060280344576*p^3+27400837659643039499/20282409603651670423947251286016*p^2-41166993696091989/1180591620717411303424*p+89913667/100000)/ar*((-209861440276113255/1329227995784915872903807060280344576*p^2+27400837659643039499/10141204801825835211973625643008*p-41166993696091989/1180591620717411303424)/(8736218079496781/1329227995784915872903807060280344576*p^3-7415248951095051/20282409603651670423947251286016*p^2+5755148032673237/1180591620717411303424*p+16333/100000)*ar-(-69953813425371085/1329227995784915872903807060280344576*p^3+27400837659643039499/20282409603651670423947251286016*p^2-41166993696091989/1180591620717411303424*p+89913667/100000)/(8736218079496781/1329227995784915872903807060280344576*p^3-7415248951095051/20282409603651670423947251286016*p^2+5755148032673237/1180591620717411303424*p+16333/100000)^2*ar*(26208654238490343/1329227995784915872903807060280344576*p^2-7415248951095051/10141204801825835211973625643008*p+5755148032673237/1180591620717411303424))/(1+(-69953813425371085/1329227995784915872903807060280344576*p^3+27400837659643039499/20282409603651670423947251286016*p^2-41166993696091989/1180591620717411303424*p+89913667/100000)/(8736218079496781/1329227995784915872903807060280344576*p^3-7415248951095051/20282409603651670423947251286016*p^2+5755148032673237/1180591620717411303424*p+16333/100000)*ar));
dabrdar = row/(row-ros)*(ros/(row-ros)/ar^2*log(1+ar/ros*(row-ros))-1/ar/(1+ar/ros*(row-ros)));
abr     = row/(row-ros)*(1-ros/(row-ros)/ar*log(1+ar/ros*(row-ros)));
Vwd     = Vwt - Vdc - (1-abr)*Vr;
l       = (Vwd+Vsd)/Ad;
qdc     = (2*row*Adc*(row-ros)*g*abr*Vr/k)^(1/2);
qct     = qf*(hw-hf)/hc + dpdt/hc*(ros*Vst*dhsdp+row*Vwt*dhwdp-Vt+mt*cp*dtsdp);
qr      = qdc - Vr*(abr*drosdp+(1-abr)*drowdp+(ros-row)*dabrdp)*dpdt+(row-ros)*Vr*dabrdar*dardt;
%Vsd0    = 1.315530101103723e+001;%Td/2/ros*(ros/Td*Vsd+ar*qdc+ar*beta*(qdc-qr));


% Mass matrix of the Differential Algebraic System
% E=[e11 e12 0 0;e21 e22 0 0;0 e32 e33 0;0 e42 e43 e44]
% Elements of the matrix E are given below

e11 = row-ros;
e12 = Vwt*(drowdp)+Vst*(drosdp);
e21 = row*hw-ros*hs;
e22 = Vwt*(hw*drowdp+row*dhwdp)+Vst*(hs*drosdp+ros*dhsdp)-Vt+mt*cp*dtsdp;
e32 = Vr*(1-abr)*(row*dhwdp-ar*hc*drowdp)+Vr*abr*(ros*dhsdp+(1-ar)*hc*drosdp)+hc*Vr*dabrdp*(ros+ar*(row-ros))-Vr+mr*cp*dtsdp;
e33 = ((1-ar)*ros+ar*row)*hc*Vr*dabrdar;
e42 = Vsd*drosdp+1/hc*(ros*Vsd*dhsdp+row*Vwd*dhwdp-Vsd-Vwd+md*cp*dtsdp)+ar*(1+beta)*Vr*(abr*drosdp+(1-abr)*drowdp+(ros-row)*dabrdp);
e43 = ar*(1+beta)*(ros-row)*Vr*dabrdar;
e44 = ros;


% Mass matrix of the Differential Algebraic System

E = [e11 e12 0 0;e21 e22 0 0;0 e32 e33 0;0 e42 e43 e44];



% Right Hand Sides of Differential Algebraic System
% RHS 1 = qf-qs 
% RHS 2 = Q+qf*hf-qs*hs
% RHS 3 = Q-ar*hc*qdc
% RHS 4 = ros/Td*(Vsd0-Vsd)+(hf-hw)*qf/hc
% States


RHS = [qf-qs;Q+qf*hf-qs*hs;Q-ar*hc*qdc;ros/Td*(Vsd0-Vsd)+(hf-hw)*qf/hc];




% Derivatives:

F=inv(E)*RHS;


% sys(1)is dVwt/dt 
sys(1) = F(1);

% sys(2)is dp/dt 
sys(2) = F(2);
dpdt2 = F(2);

% sys(3)is dar/dt 
sys(3) = F(3);
dardt2 = F(3);
% sys(1)is dVsd/dt
sys(4) = F(4);

